* To Initialized empty Git repository in Current Folder
-----     git init

* Connect git folder to your github account
-----     git config --global user.name ChigsParmar007
or
-----     git config --global user.email chigsparmar07@gmail.com

.gitignore File
if we not want to upload file/folder in github repository put that fle/folder name 
here(.gitignore)
(ex. folders like node_modules)

git status commands
-U --> stands for unstract filegit log --oneline --graph
-A --> Active file
-M --> modified files

add all files in staging area 
-----     git add -A
-a --> all
 
 when any change is made and then we need to rewrite git repository then use above command 

to save/commit git repository
-----     git commit -m 'initial commit'
-m --> message
'' --> any message/comment you want to give

go to previous commit 
-----     git reset --hard HEAD

to see log file or history of last commits
-----     git log

show logs in graphical order 
-----     git log --oneline --graph

if we want to undo code after final commit use command
-----     git reset --hard _____id_____
we got id from (git log) command
id malse log mathi

To create new branch 
Branch stand for copy of current repository.
here default repository is (master)

-----     git branch _____give_name_of_the_banch_____

create new branch and move that branch
-----     git checkout -b <branch name>

To see all branch
-----     git branch
To see git branches as well as github branches
-----     git branch -a

switch current branch for changes or see
-----     git checkout _____branch_name_____

Merge new branch to a master branch
-----     git merge _____branch_name_____

upload git branch to github
-----     git push -u origin <branch name>

Delete branch
-----     git branch --delete _____branch_name_____
or
-----     git branch --d _____branch_name_____

if we forcefully delete a branch 
-----     git branch --D <branch name>

when we delete github branch and update this to local repositiory(git)
-----    git fetch -p

delete remote brach using terminal
-----     git push origin :<brach name>

adding all remote branches in git repositiory
-----     git pull --all


TO add git repository to github account
1. Create new repository in github private
2. copy first line which is at ... choose or push an existing repository from the command line
    (ex. git remote add origin https://github.com/ChigsParmar007/git_and_github_practice.git)
    origin name is default you can change is you want
3. paste above link in vs code terminal or (cmd when you use cmd for command line)
4. save that work use command 
    -----     git push origin master
    (here master is default branch if you want to add another branch simply put that branch name instedof master)

To add README.md file
-----     touch README.md

when above command execute README.md file create in current folder
open that file and write first line like this 
(# Git and Github) first line is for heading
then write lines you want

To delete git repository
-----     rm -rf .git
rm --> remove

-----     ls -al     --> To show all files and folders.
-----     git ls-files     --> To show files and folders name which is staging area
-----     ls     --> To show all folders files and also hidden files and folders
 
-----     clear  --> to clear terminal

To rename a file 
-----     git mv _____old_fileName_____ _____new_fileName_____
this command remove old file and than create new file

To delete file
-----     git rm _____new_fileName_____

To change Author name
-----     git commit --amend --author "_____new_name_____" <_____new_email_____>
(ex. git commit --amend -- author "Chirag Parmar" <chigsparmar07@gmail.com>)

to create ssh key
-----     ssh-keygen -t rsa -C "chigsparmar07@gmail.com"

when we made some changes in github repositiory directly 
and then we try to push git repositiory it will shows error
at that time we need to fetch the github repositiory and 
pull in git repositiory.
-----     git fetch
-----     git pull origin master

when we change repositiory name in github we need to update that name in local repositiory(git repositiory) 
at that time we need to clone github repositiory
----- git remote set-url origin <ssh link from gihub>

-----     git remote -v
shows the git repositiory username and email and repositiory name also
